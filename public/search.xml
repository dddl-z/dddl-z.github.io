<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SSM整合</title>
      <link href="/2022/12/03/SSM%E6%95%B4%E5%90%88/"/>
      <url>/2022/12/03/SSM%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p><escape><span id="more"></span></escape></p><h3 id="前言">前言</h3><p>最近学习了SSM相关知识，于是打算做一篇整合巩固一下。</p><p><strong>开发环境：</strong></p><ul><li>win10</li><li>idea版本2022.1.3</li><li>jdk版本1.8</li><li>maven版本apache-maven-3.8.6</li><li>mysql版本8.0.29</li><li>postman版本10.5.2</li></ul><h3 id="创建工程">创建工程</h3><ol><li><h4 id="打开idea，创建新项目New-Project"><strong>打开idea，创建新项目New Project</strong></h4><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/newProject.png" alt="newproject"></p></li><li><h4 id="选择Maven骨架和jdk版本"><strong>选择Maven骨架和jdk版本</strong></h4><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/maven%E9%AA%A8%E6%9E%B6%E9%80%89%E6%8B%A9.png" alt="maven骨架选择"></p></li><li><h4 id="导入需要的jar包"><strong>导入需要的jar包</strong></h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span></span><br><span class="line">   </span><br><span class="line">   <span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ssm_demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">     <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       </span><br><span class="line">       <span class="comment">&lt;!--spring整合springmvc--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--jdbc--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--spring整合Junit--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--spring整合mybatis--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--阿里巴巴数据源--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--JUnit--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--web3.0容器--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">       <span class="comment">&lt;!--json数据转换--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">     <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--tomcat服务器--&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span> <span class="comment">&lt;!--这里配置访问路径，这样就不用写项目名了--&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ol><hr><h3 id="整合配置">整合配置</h3><ol><li><h4 id="创建包层次结构"><strong>创建包层次结构</strong></h4><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%8C%85%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84.png" alt="包层次结构"></p><p><strong>相关解释：</strong></p><ul><li>domain，即实体类，一些人叫pojo</li><li>dao，没有impl包，因为整合了mybatis，利用自动代理创建dao层实现类</li></ul></li><li><h4 id="创建数据库表，并编写jdbc相关的属性文件"><strong>创建数据库表，并编写jdbc相关的属性文件</strong></h4><p>数据库以及部分数据</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/ssm_db.png" alt="ssm_db"></p><p>jdbc属性配置文件（resource/jdbc.properties）</p> <figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driver</span>=<span class="string">mysql驱动类</span></span><br><span class="line"><span class="attr">jdbc.url</span>=<span class="string">连接远程数据库的标识符</span></span><br><span class="line"><span class="attr">jdbc.username</span>=<span class="string">数据库user名</span></span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="string">user密码</span></span><br></pre></td></tr></tbody></table></figure><p>下面是我的配置文件，仅供参考</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/jdbc%E5%B1%9E%E6%80%A7%E6%96%87%E4%BB%B6.png" alt="jdbc属性文件"></p></li><li><h4 id="配置JDBC"><strong>配置JDBC</strong></h4><p>将数据源配置成bean交由spring管理</p><p>注意：这里使用了属性占位符引入jdbc.properties里的相关配置，也可以手动添加（不过那样就不cool了）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcConfig</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value("${jdbc.driver}")</span></span><br><span class="line">    <span class="keyword">private</span> String driver;</span><br><span class="line">    <span class="meta">@Value("${jdbc.url}")</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="meta">@Value("${jdbc.username}")</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Value("${jdbc.password}")</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSource</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        dataSource.setDriverClassName(driver);</span><br><span class="line">        dataSource.setUrl(url);</span><br><span class="line">        dataSource.setUsername(username);</span><br><span class="line">        dataSource.setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="配置MyBatis"><strong>配置MyBatis</strong></h4><p>将SqlSessionFactoryBean和MapperScannerConfigurer配置成bean交由spring管理</p><p>注意：SqlSessionFactoryBean需要设置搜索的实体类包名，MapperScannerConfigurer需要设置映射的dao层包名</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.mapper.MapperScannerConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisConfig</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SqlSessionFactoryBean <span class="title function_">sqlSessionFactoryBean</span><span class="params">(DataSource dataSource)</span> {</span><br><span class="line">        <span class="type">SqlSessionFactoryBean</span> <span class="variable">factoryBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBean</span>();</span><br><span class="line">        factoryBean.setDataSource(dataSource);</span><br><span class="line">        factoryBean.setTypeAliasesPackage(<span class="string">"org.example.domain"</span>);</span><br><span class="line">        <span class="keyword">return</span> factoryBean;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MapperScannerConfigurer <span class="title function_">mapperScannerConfigurer</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">MapperScannerConfigurer</span> <span class="variable">msc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MapperScannerConfigurer</span>();</span><br><span class="line">        msc.setBasePackage(<span class="string">"org.example.dao"</span>);</span><br><span class="line">        <span class="keyword">return</span> msc;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="配置SpringMVC">配置SpringMVC</h4><ul><li><h5 id="web容器启动配置">web容器启动配置</h5><p>设置启动加载Spring配置、SpringMVC配置和SpringMVC拦截路径</p><p>注意：对于服务器启动后，在控制台显示中文乱码的问题，也可以在这里设置过滤器处理</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CharacterEncodingFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletConfig</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> {</span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]{SpringConfig.class};</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]{SpringMvcConfig.class};</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[]{<span class="string">"/"</span>}; <span class="comment">// 这里我设置将所有的访问都拦截下来了</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 乱码处理</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Filter[] getServletFilters() {</span><br><span class="line">        <span class="type">CharacterEncodingFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CharacterEncodingFilter</span>();</span><br><span class="line">        filter.setEncoding(<span class="string">"UTF-8"</span>); <span class="comment">// 设置字符集</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Filter</span>[]{filter}; <span class="comment">// 添加过滤器</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="SpringMVC配置">SpringMVC配置</h5><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan("org.example.controller")</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span> <span class="comment">// 开启WebMvc的多种功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringMvcConfig</span> {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><h4 id="配置Spirng"><strong>配置Spirng</strong></h4><p><strong>这里一定要写<code>classpath</code>，很关键！血的教训！</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan({"org.example.service"})</span></span><br><span class="line"><span class="meta">@PropertySource("classpath:jdbc.properties")</span> <span class="comment">// 导入配置文件</span></span><br><span class="line"><span class="meta">@Import({JdbcConfig.class, MyBatisConfig.class})</span> <span class="comment">// 导入相关配置类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><h4 id="文件层次">文件层次</h4><p>贴一下整合配置之后的文件层次，仅供参考。</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E6%95%B4%E5%90%88%E9%85%8D%E7%BD%AE.png" alt="整合配置"></p><hr><h3 id="功能模块开发">功能模块开发</h3><ol><li><h4 id="实体类"><strong>实体类</strong></h4><p>实体类中的属性需要与数据库中表的字段一一对应</p><p>set方法、get方法和重写tostring方法可以通过idea的快捷键<code>Alt + Insert</code>直接添加</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Book</span> {</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String  type;</span><br><span class="line">    <span class="keyword">private</span> String  name;</span><br><span class="line">    <span class="keyword">private</span> String  description;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Book{"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", type='"</span> + type + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", description='"</span> + description + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'}'</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> {</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getType</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setType</span><span class="params">(String type)</span> {</span><br><span class="line">        <span class="built_in">this</span>.type = type;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> {</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDescription</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDescription</span><span class="params">(String description)</span> {</span><br><span class="line">        <span class="built_in">this</span>.description = description;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="数据层"><strong>数据层</strong></h4><ul><li><h5 id="接口">接口</h5><p>提供常规CRUD</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.domain.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增删改查</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    Book <span class="title function_">getById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Book&gt; <span class="title function_">getAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="实现类">实现类</h5><p><strong>使用MyBatis的自动代理创建实现</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Delete;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Update;</span><br><span class="line"><span class="keyword">import</span> org.example.domain.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增删改查</span></span><br><span class="line">    <span class="meta">@Insert("insert into tbl_book values(null, #{type}, #{name}, #{description})")</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update("update tbl_book set type = #{type}, name = #{name}, description = #{description} where id = #{id}")</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete("delete from tbl_book where id = #{id}")</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select("select * from tbl_book where id = #{id}")</span></span><br><span class="line">    Book <span class="title function_">getById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select("select * from tbl_book")</span></span><br><span class="line">    List&lt;Book&gt; <span class="title function_">getAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><h4 id="业务层">业务层</h4><ul><li><h5 id="接口-2">接口</h5><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Delete;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Update;</span><br><span class="line"><span class="keyword">import</span> org.example.domain.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Book <span class="title function_">getById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Book&gt; <span class="title function_">getAll</span><span class="params">()</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="实现类-2">实现类</h5><p>使用自动装配注入dao接口</p><p><strong>注意</strong>：在使用idea做ssm整合的时候，如果要注入的对象在整个系统中不存在（Spring没有配相关bean，这里用的是自动代理），idea会检查并报错。但这不是真错了，所以我们可以配置（<code>Alt+Enter</code>）idea在自动装配的时候不需要对bean的类型做检测，这样就可以避免报错。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> org.example.domain.Book;</span><br><span class="line"><span class="keyword">import</span> org.example.service.BookService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao; <span class="comment">// 这里不设置可能会报错</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(Book book)</span> {</span><br><span class="line">        bookDao.save(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(Book book)</span> {</span><br><span class="line">        bookDao.update(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">delete</span><span class="params">(Integer id)</span> {</span><br><span class="line">        bookDao.delete(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Book <span class="title function_">getById</span><span class="params">(Integer id)</span> {</span><br><span class="line">        <span class="keyword">return</span> bookDao.getById(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Book&gt; <span class="title function_">getAll</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> bookDao.getAll();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><h4 id="表现层">表现层</h4><ul><li><h5 id="表现层与前端数据传输协议定义与实现">表现层与前端数据传输协议定义与实现</h5><p>参照一般的表现层与前端数据传输协议定义</p><ul><li>创建结果模型类，封装数据到data属性中</li><li>封装操作结果（增删改查）到code属性中</li><li>封装特殊消息到message（msg）属性中</li></ul><p><strong>结果类</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Object data; <span class="comment">// 封装数据</span></span><br><span class="line">    <span class="keyword">private</span> Integer code; <span class="comment">// 状态码</span></span><br><span class="line">    <span class="keyword">private</span> String msg; <span class="comment">// 特殊消息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供构造方法，方便初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(Integer code, Object data, String msg)</span> {</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">(Integer code, Object data)</span> {</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Result</span><span class="params">()</span> {</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getData</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(Object data)</span> {</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> {</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> {</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>Code值</strong></p><p>最后一位为状态位，0表示error，1表示success</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Code</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SAVE_OK</span> <span class="operator">=</span> <span class="number">20011</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">DELETE_OK</span> <span class="operator">=</span> <span class="number">20021</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">UPDATE_OK</span> <span class="operator">=</span> <span class="number">20031</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SELECT_OK</span> <span class="operator">=</span> <span class="number">20041</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SAVE_ERR</span> <span class="operator">=</span> <span class="number">20010</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">DELETE_ERR</span> <span class="operator">=</span> <span class="number">20020</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">UPDATE_ERR</span> <span class="operator">=</span> <span class="number">20030</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SELECT_ERR</span> <span class="operator">=</span> <span class="number">20040</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="控制器">控制器</h5><p>参照表现层与前端数据传输协议定义</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.domain.Book;</span><br><span class="line"><span class="keyword">import</span> org.example.service.BookService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping("/books")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookService bookService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> Book book)</span> {</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> bookService.save(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(flag ? Code.SAVE_OK : Code.SAVE_ERR, flag);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> Book book)</span> {</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> bookService.update(book);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(flag ? Code.UPDATE_OK : Code.UPDATE_ERR, flag);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping("/{id}")</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">delete</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> {</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> bookService.delete(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(flag ? Code.DELETE_OK : Code.DELETE_ERR, flag);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping("/{id}")</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span> {</span><br><span class="line">        <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> bookService.getById(id);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">code</span> <span class="operator">=</span> book != <span class="literal">null</span> ? Code.SELECT_OK : Code.SELECT_ERR;</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> book != <span class="literal">null</span> ? <span class="string">"数据查询成功"</span> : <span class="string">"数据查询失败，请重试！"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(code, book, msg);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">getAll</span><span class="params">()</span> {</span><br><span class="line">        List&lt;Book&gt; bookList = bookService.getAll();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">code</span> <span class="operator">=</span> bookList != <span class="literal">null</span> ? Code.SELECT_OK : Code.SELECT_ERR;</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> bookList != <span class="literal">null</span> ? <span class="string">"数据查询成功"</span> : <span class="string">"数据查询失败，请重试！"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(code, bookList, msg);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol><h4 id="文件层次-2">文件层次</h4><p>这里贴一下功能模块开发之后的文件层次，仅供参考</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91.png" alt="功能模块开发"></p><hr><h3 id="接口测试">接口测试</h3><ol><li><h4 id="业务层接口测试（整合JUnit）">业务层接口测试（整合JUnit）</h4><ul><li>设置测试类<code>@RunWith(SpringJUnit4ClassRunner.class)</code></li><li>设置测试环境<code>@ContextConfiguration(classes = SpringConfig.class)</code></li><li>编写测试方法</li><li>直接测试</li></ul><p>下面我做了查询单个数据和查询全部数据的测试示例，更多接口测试可自行添加</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.config.SpringConfig;</span><br><span class="line"><span class="keyword">import</span> org.example.domain.Book;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(classes = SpringConfig.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceTest</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BookService bookService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetById</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">Book</span> <span class="variable">book</span> <span class="operator">=</span> bookService.getById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(book);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGetAll</span><span class="params">()</span> {</span><br><span class="line">        List&lt;Book&gt; bookList = bookService.getAll();</span><br><span class="line">        System.out.println(bookList);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>测试结果</strong></p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E4%B8%9A%E5%8A%A1%E5%B1%82%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95-getbyid.png" alt="业务层接口测试-getbyid"></p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E4%B8%9A%E5%8A%A1%E5%B1%82%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95-getall.png" alt="业务层接口测试-getall"></p></li><li><h4 id="表现层接口测试">表现层接口测试</h4><p>先将项目启动起来</p><p><strong>配置启动项为tomcat</strong></p><ol><li><p>选择编辑启动配置</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%90%AF%E5%8A%A8%E9%A1%B9%E9%85%8D%E7%BD%AE1.png" alt="启动项配置1"></p></li><li><p>添加启动项</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%90%AF%E5%8A%A8%E9%A1%B9%E9%85%8D%E7%BD%AE2.png" alt="启动项配置2"></p></li><li><p>选择Maven</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%90%AF%E5%8A%A8%E9%A1%B9%E9%85%8D%E7%BD%AE3.png" alt="启动项配置3"></p></li><li><p>设置启动项，然后应用即可</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%90%AF%E5%8A%A8%E9%A1%B9%E9%85%8D%E7%BD%AE4.png" alt="启动项配置4"></p></li></ol><p><strong>启动项目</strong></p><p>注意控制台信息：容器初始化没有异常则启动成功</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F.png" alt="项目启动成功"></p><p><strong>使用PostMan进行测试</strong></p><p>下面是我的测试截图，仅供参考</p><p>保存图书</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E4%BF%9D%E5%AD%98%E5%9B%BE%E4%B9%A6%E6%B5%8B%E8%AF%95.png" alt="保存图书测试"></p><p>修改图书</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E4%BF%AE%E6%94%B9%E5%9B%BE%E4%B9%A6%E6%B5%8B%E8%AF%95.png" alt="修改图书测试"></p><p>删除图书</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%88%A0%E9%99%A4%E5%9B%BE%E4%B9%A6%E6%B5%8B%E8%AF%95.png" alt="删除图书测试"></p><p>查询单个图书</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E6%9F%A5%E8%AF%A2%E5%8D%95%E4%B8%AA%E5%9B%BE%E4%B9%A6%E6%B5%8B%E8%AF%95.png" alt="查询单个图书测试"></p><p>查询全部图书</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E6%9F%A5%E8%AF%A2%E5%85%A8%E9%83%A8%E5%9B%BE%E4%B9%A6%E6%B5%8B%E8%AF%95.png" alt="查询全部图书测试"></p></li></ol><h4 id="文件层次-3">文件层次</h4><p>这里贴出进行接口测试后的文件层次，仅供参考</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95.png" alt="接口测试"></p><hr><h3 id="事务处理">事务处理</h3><ol><li><h4 id="开启注解式事务驱动">开启注解式事务驱动</h4><p>在SpringConfig添加注解<code>@EnableTransactionManagement</code></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan({"org.example.service"})</span></span><br><span class="line"><span class="meta">@PropertySource("classpath:jdbc.properties")</span></span><br><span class="line"><span class="meta">@Import({JdbcConfig.class, MyBatisConfig.class})</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="配置事务的管理器">配置事务的管理器</h4><p>由于这里事务控制的是数据层操作，所以我将管理器配置在jdbcConfig（位置无所谓）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.PlatformTransactionManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdbcConfig</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value("${jdbc.driver}")</span></span><br><span class="line">    <span class="keyword">private</span> String driver;</span><br><span class="line">    <span class="meta">@Value("${jdbc.url}")</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="meta">@Value("${jdbc.username}")</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="meta">@Value("${jdbc.password}")</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSource</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        dataSource.setDriverClassName(driver);</span><br><span class="line">        dataSource.setUrl(url);</span><br><span class="line">        dataSource.setUsername(username);</span><br><span class="line">        dataSource.setPassword(password);</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事务管理器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PlatformTransactionManager <span class="title function_">transactionManager</span><span class="params">(DataSource dataSource)</span> {</span><br><span class="line">        <span class="type">DataSourceTransactionManager</span> <span class="variable">ds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceTransactionManager</span>();</span><br><span class="line">        ds.setDataSource(dataSource);</span><br><span class="line">        <span class="keyword">return</span> ds;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="添加事务">添加事务</h4><p>将<code>@Transactional</code>配到接口上</p><p>这里我配到业务层接口，这样该接口的所有方法都各自作为一个事务</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.domain.Book;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> book</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(Book book)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Book <span class="title function_">getById</span><span class="params">(Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询全部</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Book&gt; <span class="title function_">getAll</span><span class="params">()</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ol><hr><h3 id="异常处理">异常处理</h3><ul><li><h4 id="处理方式">处理方式</h4><p>仅供参考</p><ul><li>将所有的异常分为自定义的三类：系统异常、业务异常和其他异常。</li><li>所有异常全部向上抛出，集中在表现层进行处理。</li></ul></li><li><h4 id="异常归类">异常归类</h4><p>自定义异常，将所有的异常分类归为自定义的异常，统一管理</p><p>先将业务异常和系统异常分类造出来，出现异常的时候将相应异常归为这两类处理</p><ul><li><h5 id="系统异常">系统异常</h5><ul><li><p>继承<code>RuntimeException</code></p><p>这种运行时异常出现后自动往上抛</p></li><li><p>加入私有属性<code>code</code>帮助识别异常的种类</p></li><li><p>根据需求选择性的覆盖构造方法</p></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SystemException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> {</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> {</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SystemException</span><span class="params">(Integer code, String message)</span> {</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SystemException</span><span class="params">(Integer code, String message, Throwable cause)</span> {</span><br><span class="line">        <span class="built_in">super</span>(message, cause);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="业务异常">业务异常</h5><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BusinessException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> {</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getCode</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(Integer code)</span> {</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BusinessException</span><span class="params">(Integer code, String message)</span> {</span><br><span class="line">        <span class="built_in">super</span>(message);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BusinessException</span><span class="params">(Integer code, String message, Throwable cause)</span> {</span><br><span class="line">        <span class="built_in">super</span>(message, cause);</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h5 id="其他异常">其他异常</h5><p>如果不属于上述两种异常，都归为其他异常进行处理</p></li></ul></li><li><h4 id="异常处理器">异常处理器</h4><p>拦截并处理异常</p><p>由于集中到表现层处理异常，所以在controller包下实现异常处理器类<code>ProjectExceptionAdvice</code></p><ul><li><p>声明该类是做异常处理的，加注解<code>@RestControllerAdvice</code></p></li><li><p>在该类中编写方法处理异常</p><p>为方法增加异常处理标志<code>@ExceptionHandler(Exception.class)</code>，参数表示拦截的异常的种类</p><p><strong>通过形参，将异常的对象传到处理器中</strong></p><ul><li><p>处理系统异常方法</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@ExceptionHandler(SystemException.class)</span></span><br><span class="line">  <span class="keyword">public</span> Result <span class="title function_">doSystemException</span><span class="params">(SystemException ex)</span> {</span><br><span class="line">      <span class="comment">// 记录日志</span></span><br><span class="line">      <span class="comment">// 发送消息给运维</span></span><br><span class="line">      <span class="comment">// 发送邮件给开发人员，ex对象发送给开发人员</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(ex.getCode(), <span class="literal">null</span>, ex.getMessage());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>处理业务异常方法</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@ExceptionHandler(BusinessException.class)</span></span><br><span class="line">  <span class="keyword">public</span> Result <span class="title function_">d0BusinessException</span><span class="params">(BusinessException ex)</span> {</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(ex.getCode(), <span class="literal">null</span>, ex.getMessage());</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>处理其他异常方法</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 其他异常</span></span><br><span class="line">  <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">  <span class="keyword">public</span> Result <span class="title function_">doException</span><span class="params">(Exception ex)</span> {</span><br><span class="line">      <span class="comment">// 记录日志</span></span><br><span class="line">      <span class="comment">// 发送消息给运维</span></span><br><span class="line">      <span class="comment">// 发送邮件给开发人员，ex对象发送给开发人员</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(Code.SYSTEM_UNKNOW_ERR, <span class="literal">null</span>, <span class="string">"系统繁忙，请稍后再试！"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>拦截到异常后，需要给前端反馈，参照数据传输协议（Result）</p><ul><li><p>定义异常的Code码</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异常</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SYSTEM_ERR</span> <span class="operator">=</span> <span class="number">50001</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SYSTEM_TIMEOUT_ERR</span> <span class="operator">=</span> <span class="number">50002</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">SYSTEM_UNKNOW_ERR</span> <span class="operator">=</span> <span class="number">59999</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">BUSINESS_ERR</span> <span class="operator">=</span> <span class="number">60002</span>;</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>保证SpringMVC加载到了该配置类（<code>@ComponentScan("org.controller")</code>）</p></li></ul><p><strong>最终异常处理器类的代码如下</strong></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.exception.BusinessException;</span><br><span class="line"><span class="keyword">import</span> org.example.exception.SystemException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProjectExceptionAdvice</span> {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 系统异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(SystemException.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">doSystemException</span><span class="params">(SystemException ex)</span> {</span><br><span class="line">        <span class="comment">// 记录日志</span></span><br><span class="line">        <span class="comment">// 发送消息给运维</span></span><br><span class="line">        <span class="comment">// 发送邮件给开发人员，ex对象发送给开发人员</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(ex.getCode(), <span class="literal">null</span>, ex.getMessage());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 业务异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(BusinessException.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">d0BusinessException</span><span class="params">(BusinessException ex)</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(ex.getCode(), <span class="literal">null</span>, ex.getMessage());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他异常</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">doException</span><span class="params">(Exception ex)</span> {</span><br><span class="line">        <span class="comment">// 记录日志</span></span><br><span class="line">        <span class="comment">// 发送消息给运维</span></span><br><span class="line">        <span class="comment">// 发送邮件给开发人员，ex对象发送给开发人员</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>(Code.SYSTEM_UNKNOW_ERR, <span class="literal">null</span>, <span class="string">"系统繁忙，请稍后再试！"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><h4 id="测试异常">测试异常</h4><p>模拟异常的发生，测试异常处理的合法性</p><ul><li><h5 id="模拟业务异常">模拟业务异常</h5><ul><li><p>修改业务层方法，使其抛出业务异常</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Book <span class="title function_">getById</span><span class="params">(Integer id)</span> {</span><br><span class="line">    <span class="comment">// 模拟业务异常</span></span><br><span class="line">    <span class="keyword">if</span> (id == <span class="number">1</span>) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(Code.BUSINESS_ERR, <span class="string">"请根据规范输入！"</span>);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> bookDao.getById(id);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动项目，并使用postman测试</p></li><li><p>测试结果</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E4%B8%9A%E5%8A%A1%E5%BC%82%E5%B8%B8%E6%B5%8B%E8%AF%95.png" alt="业务异常测试"></p></li></ul></li><li><h5 id="模拟系统异常">模拟系统异常</h5><ul><li><p>修改业务层（位置无所谓）方法，使其抛出系统异常</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Book <span class="title function_">getById</span><span class="params">(Integer id)</span> {</span><br><span class="line">      </span><br><span class="line">    <span class="comment">// 将可能出现的异常进行包装，转换成自定义异常</span></span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">      } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SystemException</span>(Code.SYSTEM_TIMEOUT_ERR, <span class="string">"服务器访问超时，请重试！"</span>, e);</span><br><span class="line">      }</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">return</span> bookDao.getById(id);</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p>这里包装异常的时候可以利用AOP思想</p></li><li><p>启动项目，并使用postman测试</p></li><li><p>测试结果</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E7%B3%BB%E7%BB%9F%E5%BC%82%E5%B8%B8%E6%B5%8B%E8%AF%95.png" alt="系统异常测试"></p></li></ul></li><li><h5 id="模拟其他异常">模拟其他异常</h5><ul><li><p>修改业务层（位置无所谓）方法，使其抛出其他异常</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Book <span class="title function_">getById</span><span class="params">(Integer id)</span> {</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bookDao.getById(id);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动项目，并使用postman测试</p></li><li><p>测试结果</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%85%B6%E4%BB%96%E5%BC%82%E5%B8%B8%E6%B5%8B%E8%AF%95.png" alt="其他异常测试"></p></li></ul></li></ul></li></ul><h4 id="文件层次-4">文件层次</h4><p>这里贴出异常处理后的文件层次，仅供参考。</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.png" alt="异常处理"></p><hr><h3 id="前后台协议联调">前后台协议联调</h3><p>将静态资源文件粘贴到webapp包下</p><ul><li><h4 id="设置对静态资源的访问不拦截">设置对静态资源的访问不拦截</h4><p>SpringMVC设定了拦截所有的请求，页面的请求也会拦截</p><ul><li><p><strong>编写<code>SpringMvcSupport</code>类</strong></p><p>对静态资源的访问指定到静态文件（不拦截）</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringMvcSupport</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> {</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> {</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/pages/**"</span>).addResourceLocations(<span class="string">"/pages/"</span>);</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/css/**"</span>).addResourceLocations(<span class="string">"/css/"</span>);</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/js/**"</span>).addResourceLocations(<span class="string">"/js/"</span>);</span><br><span class="line">        registry.addResourceHandler(<span class="string">"/plugins/**"</span>).addResourceLocations(<span class="string">"/plugins/"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>确保该配置类被SpringMvcConfig加载</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan({"org.example.controller", "org.example.config"})</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span> <span class="comment">// 开启WebMvc的多种功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringMvcConfig</span> {</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><h4 id="使用ajax请求调用后端接口">使用ajax请求调用后端接口</h4><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询全部</span></span><br><span class="line">axios.<span class="title function_">get</span>(<span class="string">"/books"</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>{});</span><br><span class="line"><span class="comment">// 查询单个</span></span><br><span class="line">axios.<span class="title function_">get</span>(<span class="string">"/books/"</span> + row.<span class="property">id</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>{});</span><br><span class="line"><span class="comment">// 保存</span></span><br><span class="line">axios.<span class="title function_">post</span>(<span class="string">"/books"</span>, <span class="variable language_">this</span>.<span class="property">formData</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>{});</span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line">axios.<span class="title function_">delete</span>(<span class="string">"/books/"</span> + row.<span class="property">id</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>{});</span><br><span class="line"><span class="comment">// 修改</span></span><br><span class="line">axios.<span class="title function_">put</span>(<span class="string">"/books"</span>, <span class="variable language_">this</span>.<span class="property">formData</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>{});</span><br></pre></td></tr></tbody></table></figure></li></ul><h4 id="文件层次-5">文件层次</h4><p>这里贴出前后台协议联调后的文件层次，仅供参考。</p><p><img src="/2022/12/03/SSM%E6%95%B4%E5%90%88/%E5%89%8D%E5%90%8E%E5%8F%B0%E5%8D%8F%E8%AE%AE%E8%81%94%E8%B0%83.png" alt="前后台协议联调"></p><hr><h3 id="结语">结语</h3><p>博客中的项目放在<a href="https://github.com/dddl-z/Demo">Demo</a></p><p>欢迎指正捉虫。</p><p>祝生活愉快！</p>]]></content>
      
      
      <categories>
          
          <category> SSM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022/11/26-随笔</title>
      <link href="/2022/11/26/20221126-%E9%9A%8F%E7%AC%94/"/>
      <url>/2022/11/26/20221126-%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<p><escape><span id="more"></span></escape></p><blockquote><p>这大概是一篇吐槽。</p></blockquote><p>二零二二年十一月二十六日凌晨一点十二分，我在床上，点一盏小灯，拉起床帘，背靠墙壁，用枕头垫着电脑（很担心我电脑会因为散热而死机），敲下这篇博客。</p><h3 id="说说近况">说说近况</h3><p>最近学习状态还不错，大概是因为袁副总push了我一番，不过由于学的东西并没有很强的逻辑性，所以每天只是感觉比较累，并没有之前学习算法时很兴奋的感觉。</p><p>情绪状态不太好，因为一些琐事，我其实是个挺容易被一些琐事影响到的人，可能看起来我满不在乎，但是心里很膈应，我尽量不去想那些琐事，但是只要停下来学习，就会浮现眼前。</p><p>身体还算硬朗，最近睡得挺香，不过这就苦了我的室友们hh，上周末回家休息了两天，游了两回泳，陪陪家人，听听絮叨，感觉很舒服。</p><h3 id="关于”小团体“">关于”小团体“</h3><p>大二到了新专业之后，倒是没几天就因为同在一个宿舍楼认识了一些新朋友，也因为一起喝酒打牌打游戏出去玩很快熟络了起来，我很开心，觉得自己的运气不错，没有遇到什么恶心的室友，或者恶心的同学，而且相邻的同学脾胃相投，不愁大学生活没有生趣。后来，同在一个宿舍楼的我们五个人，就成了我自以为的“小团体”。</p><p>那时候每天我们五个人都一起上课，一起吃饭，一起出去玩，有作业一起抄，有烟一起抽，有活动一起造，有烂一起摆。我更加开心了，因为我觉得大学还能找到三五好友陪在身边，什么话都能说，互相吵吵闹闹的，很不容易。我也很珍惜，今年我的生日也只有我们五个。</p><p>从什么时候开始变的呢？</p><p>大概是从我不摆烂了开始。我从摆烂到学习转变的很快，至少除了我之外的人看来，是这样的，所以我其实挺能理解别人的不理解，如果是我的话，每天一起摆烂的朋友突然开始背书包去图书馆，大概我也会无法接受。所以一开始，“小团体”的其他人对我阴阳怪气，或者对我出言不逊，又或者故意孤立我，这些我都是呈容忍态度的。</p><p>后来，随着时间的推移，好像大家接受了这个事实，有所好转，不过还是有“小孩”故意恶心我，他的理由我也很不理解：偷偷卷，难道我每天去图书馆学习还要向你报告一声吗？还是说我应该在你脸上敲代码呢？不过最让我恶心的是，“小孩”经常性的以室友的名义不让其室友（“小团体”的人）理我，挺无语的，最牛逼的是“小孩”的室友还听“小孩”的，这其实让我很费解，“咱俩是室友，你得听我的”，这是我见过最牵强的理由了，我不觉得一个成年人需要对室友言听计从，或者说需要维系好室友这个关系，在我的观念里，室友只是每天晚上在同一个房间睡觉而已。更加离谱的是，“小孩”经常对室友pua。。。</p><p>这个学期初都挺好的，最近不知道为什么开始犯病了，“小孩”的情绪也是时好时坏，“小孩”的态度更是随着情绪变化而变化，很可怕的一点是已经大三了，他也不是个小孩。</p><p>更可怕的是，我周围很多“小孩子”。</p><h3 id="经历">经历</h3><p>写到这突然想聊聊我的经历。</p><p>我从高一开始一个人生活，在学校旁的小胡同里租了一个单间，又要了一辆小电驴，属实是潇洒。一个人生活是我要求的，不过初衷倒没有多么长远，只是因为当时谈恋爱了，总要有个温存的小空间嘛。</p><p>高一暑假分手的，高一下的竞赛考试我考了全校第15名，成绩出来那一天，我的年轻班主任甚至在办公室与我讨论我的未来：去少年班还是考清华，哈哈哈哈哈哈哈。</p><p>然后开启了我的摆烂人生，小单间和小电驴也成了我摆烂的助力。这样一直持续到高三，班主任念及旧情，给我分到了我们班名列前茅的女同学，他的初衷是好的，但是万万没有想到的是，我把女同学勾搭上了，哈哈哈哈哈哈哈哈。</p><p>高考分数还没出，我就去报名了复读学校。报名当天，我见到了初中的玩伴，于是复读生活并没有我想象中的苦逼。</p><p>说实在的，复读一年大概是我玩的最舒服的一年。复读班里个个都是人才，说话又好听，在这里我也找到了“小团体”（我总是能找到“小团体”），同样的，我们每天早自习睡觉，上课睡觉，上课打游戏，逃课，早退，翻墙，点外卖，自习课聊天，喝酒，吃饭，出去玩等等，真的很开心，那段时光真的很开心，我在敲这段字的时候脸上也洋溢着笑容，真的很开心。</p><p>高四上学期是我玩的最疯的时候，到了下学期我才开始有些紧张，于是我开始听课做卷子，“小团体”的活动也减少了，大家也开始学习了，不过临近高考一个月的时候，我又按捺不住了，大夏天的太热了，我和一同学合计，在学校旁边找了一个旅馆，租了包月的标间，于是我又开始了不分昼夜，我让他每天早上去上课的时候，把房卡留在窗户上，防止通宵之后的我进不去睡觉。</p><p>就这样到了高考，就这样过了高考。</p><p>第一次有意识的学习是在大一下确定了我转专业成功之后，我开始去图书馆学习c语言，只带书不带电脑，因为那时候我怕游戏本的风扇声音太大了（现在我发现了自由机房），光看书学编程？简直笑话，看着看着我就睡着了，那段时间我大概真是自己骗自己。</p><h3 id="成长">成长</h3><p>这段普通的经历让我收获最大的是，我有了独立能力（除了做饭），有了独立思考的能力，也有了选择的勇气。那天下午，我跟大妈聊天的时候还提到了，我认为男孩尽早的独立起来是一件好事，这样他就可以独立思考，敢于选择，也有了责任感。自我高一开始，不管什么决定，我都是自己做，小到今天吃什么饭，大到高考志愿。我认为可以自己选择是一件很爽的事情，不用听从外界的声音，全凭自己主观决定，同时也是一件很有压力的事情，自己选择代表自己承担后果，不管是好是坏，这需要勇气。</p><p>鉴于此，开头我才会说：我周围很多“小孩子”。</p><h3 id="结尾">结尾</h3><p>夜深了，两千余字我写了近九十分钟。</p><p>不知道为什么，写这种内容虽然没什么意义，但是让我很轻松，我读的书少，有没有读书多的告诉我这是为什么。</p><p>说到读书，最近我经朋友推荐，正在拜读尼采《查拉图斯特拉如是说》，不过一般在梦里读，所以进度有些慢，等我读完会发一篇感悟hh。</p><p>这种内容以后会少输出，更多的输出算法、八股文相关。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吐槽 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>平均值技巧和折半搜索</title>
      <link href="/2022/11/16/%E5%B9%B3%E5%9D%87%E5%80%BC%E6%8A%80%E5%B7%A7%E5%92%8C%E6%8A%98%E5%8D%8A%E6%90%9C%E7%B4%A2/"/>
      <url>/2022/11/16/%E5%B9%B3%E5%9D%87%E5%80%BC%E6%8A%80%E5%B7%A7%E5%92%8C%E6%8A%98%E5%8D%8A%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<p><escape><span id="more"></span></escape></p><h3 id="Preface">Preface</h3><p>A 数组的长度范围为 $[1, 30]$，可以发现，如果我们枚举每个元素属于哪个数组（取或不取）的话，时间复杂度是 $2^{30}$</p><p><strong>通过折半搜索，我们可以将时间复杂度降到 $2^{\frac{n}{2}}$ 次方，对于这一题来说就是 $2^{15}$ 次方</strong></p><p>我们把原集合 $A$ 划分成两个子集 $B$ 和 $C$，$B$ 和 $C$ 各自的总和用 $S1$ 和 $S2$ 表示，$B$ 和 $C$ 各自的长度（集合内元素个数）用 $C1$ 和 $C2$ 表示</p><p>那么就有：<br>$$<br>\frac{S1+S2}{C1+C2} = \frac{S1}{C1} = \frac{S2}{C2}<br>$$<br>也就是说，<strong>划分之后的子集的平均数与原集合的平均数相同</strong></p><p>我们可以先把原集合 A 的平均数 $avg$ 先求出来：<br>$$<br>avg = \frac{x1+x2+x3+…+xn}{n}<br>$$</p><h3 id="平均值技巧">平均值技巧</h3><p>假设原集合里的所有元素：$x1, x2, x3 … xn$，让这些元素都各自减去 $avg$ 得到集合 $y1, y2, y3 … yn$，我们称这个集合为 $y$<br>$$<br>yi = xi - avg<br>$$<br>那么如果从原集合里选出 $k$ 个数，使得这些数组成的集合的平均值等于 $avg$，就有：<br>$$<br>Avg(x1, x2 … xk) = avg<br>$$<br>计算 y 集合的和：</p><p>$$<br>Sum(y1,y2…yk)=x1-avg+x2-avg+…+xk-avg<br>$$<br>由上述两式可以推导出：<br>$$<br>Sum(y1,y2…yk) = Avg(x1,x2…xk) * k-avg*k=0<br>$$<br>可以得出结论</p><blockquote><p><strong>从原集合里选出一些数，使得这些数的平均值等于 avg 等价于这些数对应的 y 集合的数值和为0</strong></p></blockquote><h3 id="问题转换">问题转换</h3><p><strong>那么接下来的问题就变成了：是否能在原集合的 y 集合里选出一个子集，且该子集的和为0</strong></p><p>该子集的个数 $cnt$ 要满足：</p><p>$$<br>1 &lt;= cnt &lt;= n - 1<br>$$</p><h3 id="折半搜索">折半搜索</h3><p>使用折半搜索，牺牲空间优化时间，解决这个问题</p><p>将 y 序列平均分成两半部分，$m = \frac{n}{2}$，前半部分 $[0, m - 1]$ 后半部分 $[m, n - 1]$</p><ul><li><p>先<strong>对后半部分搜索</strong>，找到后半部分的所有子集，并用<strong>哈希表</strong>存下来这些子集的和</p></li><li><p>再<strong>对前半部分搜索</strong>，假设搜索到的其中一种方案的子集和为 $sum$，那么就在哈希表里查找，是否存在 $-sum$</p></li></ul><p>如果前半部分的子集和中有 $sum$，后半部分的子集和中存在 $-sum$，那么我们就找到了一个子集：该子集满足和为 $0$，那么就说明对于原集合中对应的子集 $S$，$S$ 的平均值等于原集合的平均值，则可以对原集合均值分割</p><h4 id="精度问题">精度问题</h4><p>每个数不一定可以整除，会涉及到浮点数的问题，所以我们可以先将原集合里的数都扩展 $n$ 倍</p><p>也就是原集合里的数每个都先乘以 $n$，且这样改变之后，并不影响该题的题意以及判断</p><p>改变前和改变后是等价的</p><h4 id="边界问题">边界问题</h4><p>因为我们找到的和为 $0$ 的子集长度需要满足 $1 &lt;= cnt &lt;= n - 1$，则我们不失一般性的，对于前半部分为空集或者全集的情况特判：</p><ul><li>如果前半部分找到的子集为空集，那么后半部分就不能选择空集，因为需要满足 $1 &lt;= cnt$</li><li>如果前半部分找到的子集为全集，那么后半部分就不能选择全集，因为需要满足 $cnt &lt;= n - 1$</li><li>如果非空非全，直接判断长度是否满足要求即可</li></ul><h4 id="集合的选择">集合的选择</h4><p>因为子集的和可能是相同的，所以，我们需要找到一个集合可以存储相同的元素，且查找删除方法的时间复杂度较低</p><ul><li>c++里存在这样的集合：<code>multiset</code></li><li>很不幸，java里不存在这样的集合，除非调类库guava<ul><li>考虑过使用list，但是意料之中的超时了</li><li>考虑使用Map，key：后半部分所有的方案和，value：方案和对应的出现次数，如果这样做甚至比c++快不少</li></ul></li></ul><h3 id="发现不严谨">发现不严谨</h3><p><strong>我们在折半查找中，只找到了一个子集，该子集的 $y$ 序列和为 $0$（等价于平均值为 $avg$），那么剩下的元素组成的集合也是满足 $y$ 序列和为 $0$ 吗？</strong></p><p><strong>简单证明</strong>：已知原集合 $A$ 的 $y$ 序列是满足和为 $0$ 的（因为原序列的平均值为 $avg$），现在找到了一个子集 $B$，其 $y$ 序列和也是 $0$，剩下的元素组成了子集 $C$</p><p>反证：$B$ 的 $y$ 序列和 $C$ 的 $y$ 序列不重不漏的组成了 $A$ 的 $y$ 序列，那么就有：</p><p>$$<br>Sum(By) + Sum(Cy) = Sum(Ay)<br>$$<br>假设 $C$ 的 $y$ 序列和不为 $0$，那么就有：</p><p>$$<br>0 + !0 = 0<br>$$<br>显然这是不成立的，则原结论正确</p><p><strong>代码具体实现中，还有一些细节优化，在注释中体现</strong></p><h3 id="Code">Code</h3><p>c++</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line">    unordered_multiset&lt;<span class="type">int</span>&gt; S;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在区间[u, n]找到所有方案数的和</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">dfs1</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> n, <span class="type">int</span> sum)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (u == n) S.<span class="built_in">insert</span>(sum);</span><br><span class="line">        <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">dfs1</span>(u + <span class="number">1</span>, n, sum); <span class="comment">// 方案不取当前元素</span></span><br><span class="line">            <span class="built_in">dfs1</span>(u + <span class="number">1</span>, n, sum + nums[u]); <span class="comment">// 方案取当前元素</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cnt是当前序列的长度（需要满足不是空集和不是全集）sum是当前方案的和</span></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> n, <span class="type">int</span> sum, <span class="type">int</span> cnt)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (u == n) {</span><br><span class="line">            <span class="keyword">if</span> (cnt &amp;&amp; cnt &lt; n &amp;&amp; S.<span class="built_in">count</span>(-sum)) <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">dfs2</span>(u + <span class="number">1</span>, n, sum, cnt)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">dfs2</span>(u + <span class="number">1</span>, n, sum + nums[u], cnt + <span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">splitArraySameAverage</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; _nums)</span> </span>{</span><br><span class="line">        nums = _nums;</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> sum = <span class="built_in">accumulate</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; x : nums) x = x * n - sum; <span class="comment">// 防止精度问题，先将每个元素乘以 n，且减去乘以n之后的平均值</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 折半搜索</span></span><br><span class="line">        <span class="type">int</span> m = n / <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">dfs1</span>(m, n, <span class="number">0</span>); <span class="comment">// 搜索后半部分的每个方案的和，并存在哈希表里</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果前半部分取得方案是空集，那么后半部分取的方案就不能是空集</span></span><br><span class="line">        <span class="type">int</span> s1 = <span class="number">0</span>; <span class="comment">// 删掉后半部分方案中是空集的和</span></span><br><span class="line">        S.<span class="built_in">erase</span>(S.<span class="built_in">find</span>(s1)); <span class="comment">// 注意这里只去掉了一个 s1，因为 S 中可能还有其他 0（其他非空方案的和）</span></span><br><span class="line">        <span class="keyword">if</span> (S.<span class="built_in">count</span>(<span class="number">0</span>)) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 此时前半部分取得的方案是空集，和为0，那么在后半部分找是否存在-0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果前半部分取得方案是全集，那么后半部分取的方案就不能是全集</span></span><br><span class="line">        S.<span class="built_in">insert</span>(s1);</span><br><span class="line">        <span class="type">int</span> s2 = <span class="built_in">accumulate</span>(nums.<span class="built_in">begin</span>() + m, nums.<span class="built_in">begin</span>() + n, <span class="number">0</span>); </span><br><span class="line">        S.<span class="built_in">erase</span>(S.<span class="built_in">find</span>(s2)); <span class="comment">// 删掉后半部分方案中是全集的情况</span></span><br><span class="line">        <span class="keyword">if</span> (S.<span class="built_in">count</span>(-<span class="built_in">accumulate</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">begin</span>() + m, <span class="number">0</span>))) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 前半部分取全集和为a，判断后半部分是否存在 -a</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 一般情况</span></span><br><span class="line">        S.<span class="built_in">insert</span>(s2);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs2</span>(<span class="number">0</span>, m, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>java</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span>[] nums;</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(); <span class="comment">// key：后半部分所有的方案和 value：方案和对应的出现次数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">splitArraySameAverage</span><span class="params">(<span class="type">int</span>[] nums)</span> {</span><br><span class="line">        <span class="built_in">this</span>.nums = nums;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> t : nums) sum += t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i ++) nums[i] = nums[i] * n - sum;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 折半搜索</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> n / <span class="number">2</span>;</span><br><span class="line">        dfs1(m, n, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 前半部分取空集</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        map.put(s1, map.getOrDefault(s1, <span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (map.get(s1) &lt;= <span class="number">0</span>) map.remove(s1);</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(<span class="number">0</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 前半部分取全集</span></span><br><span class="line">        map.put(s1, map.getOrDefault(s1, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> m; i &lt; n; i ++) s2 += nums[i];</span><br><span class="line">        map.put(s2, map.getOrDefault(s2, <span class="number">0</span>) - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (map.get(s2) &lt;= <span class="number">0</span>) map.remove(s2);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i ++) a += nums[i];</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(-a)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 一般情况</span></span><br><span class="line">        map.put(s2, map.getOrDefault(s2, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> dfs2(<span class="number">0</span>, m, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">dfs1</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> n, <span class="type">int</span> sum)</span> {</span><br><span class="line">        <span class="keyword">if</span> (u == n) map.put(sum, map.getOrDefault(sum, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> {</span><br><span class="line">            dfs1(u + <span class="number">1</span>, n, sum);</span><br><span class="line">            dfs1(u + <span class="number">1</span>, n, sum + nums[u]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">dfs2</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> n, <span class="type">int</span> sum, <span class="type">int</span> cnt)</span> {</span><br><span class="line">        <span class="keyword">if</span> (u == n) {</span><br><span class="line">            <span class="keyword">if</span> (cnt &gt; <span class="number">0</span> &amp;&amp; cnt &lt; n &amp;&amp; map.containsKey(-sum)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">if</span> (dfs2(u + <span class="number">1</span>, n, sum, cnt)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (dfs2(u + <span class="number">1</span>, n, sum + nums[u], cnt + <span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深度优先搜索 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度优先搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/05/06/Hello%20World/"/>
      <url>/2022/05/06/Hello%20World/</url>
      
        <content type="html"><![CDATA[<p><escape><span id="more"></span></escape></p><blockquote><p>严格意义上，这是我的第一篇博客</p></blockquote><p>现在是二零二二年十一月十六日凌晨一点四十，室友都上床休息了，我屈着一只腿坐在桌前椅子上，身上只着一条性感内内，露着八字奶，上身前屈，伸着头，带着猥琐的笑<span class="github-emoji"><span>😁</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>，写下了这篇博客。</p><h3 id="为什么突然想写博客">为什么突然想写博客</h3><p>平时刷算法题的时候，我有记笔记的习惯，前几日，我写完一篇算法笔记之后，萌生了写题解发布到平台上的想法，可能是思路清晰之后的成就感，或者是思考了很久之后的如释重负，又或者是分享欲突然爆棚，不管因为什么，最后我的第一篇题解发布到了力扣平台上。</p><p>后面的几天，我陆续又发了几篇题解，倒不是为了发题解而写，我只是将笔记复制下来发布了。总之并没有很强的目的性，所以即使直到现在也没有几个人看我的题解，更别提点赞什么的，但这并没有让我感到沮丧。</p><p>就在前天，我写完一篇笔记之后，因为这篇笔记里有一个简单证明，这对我来说很不容易（可把我牛逼坏了<span class="github-emoji"><span>😕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f615.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>），所以我突然想到看看我的好homie的博客，需要说明，这两件事并没有关联，但是当时我就是这样想的。</p><p>视奸一番之后，索然无味<span class="github-emoji"><span>😋</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60b.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p><p>不过让我产生了一个新想法：我也要写博客。</p><h3 id="如何开始的">如何开始的</h3><p>其实在前几个月，大概是5月份？在我的好homie的帮助下，我就配置了 $git$ 环境和 $Node.js$，同时也部署了 $hexo$ 框架，甚至我现在才发现，连主题都帮我弄好了，他真的…我哭死<span class="github-emoji"><span>😭</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p><p>不过这些事对当时的我来说，其实是无感的，那时的我只知道我下载了几个东西，除此之外，我一无所知，甚至连敲命令都不知道是怎么回事，写到这里再次拜谢我的好homie，他居然花了一天时间教我这样的fw，他真的…我哭死<span class="github-emoji"><span>😭</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p><p>然后，从那天以后，我就没碰过博客了<span class="github-emoji"><span>😅</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p><p>时间回到前日，我的好homie向来也有记笔记的习惯（我为什么要说也…我tm是跟他学的记笔记啊），于是我不出意外的意料之中的在好homie的博客里找到了 $hexo$ 的相关博客，并且很快掌握了如何发布博客。</p><h3 id="发布博客遇到的一些问题">发布博客遇到的一些问题</h3><p>学会了如何发布博客之后，我就信心满满的发布了一篇当天写的题解，并且美美的睡了一觉（婴儿般的睡眠<span class="github-emoji"><span>😇</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f607.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>），不过第二天，当我打算欣赏一下时，发现出现了很多问题。</p><ul><li>latex语法不支持</li><li>文章直接显示到了主页</li><li>没有标题、标签、分类等等</li></ul><p>总之很丑。</p><p>然后我又来到了我的好homie的博客，不出意外的意料之中的找到了解决方法，他真的…我哭死<span class="github-emoji"><span>😭</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="说说最近的状态">说说最近的状态</h3><p>最近可能是到了乏味的学习阶段，虽然算法让我感到快乐，但是很可惜，我不是天才，不能在短时间内达到算法高手，所以对于时间紧迫的我来说，苦修算法对我意义不大。</p><p>我只能选择学习 $Javaer$ 必修课。</p><p>我暂时没有找到这其中的乐趣，不过理论知识得到了补充，也让我很满足。</p><p>前段时间，上课时间上课，下课时间学习，很少有自己的时间，所以夜晚成了我的休憩时刻，每天其实很困，但是洗完澡，人仿佛焕然一新，一下子精神起来了，躺在床上就想着摸卵蛋、刷视频。</p><p>最近几天 $Javaer$ 必修课的学习提上了日程，让我又紧张了起来，所以有所改变，但是躺在床上还是难以入睡。</p><p>希望能尽快调整好状态。</p><h3 id="胡思乱想">胡思乱想</h3><p>我是谁，我在哪，我要去何方，人生的意义是什么，我存在的价值是什么，未来会如何，过去又是怎样的。</p><h3 id="无言">无言</h3><p>可能是我词汇量太匮乏，看过的书太少，总之我不知道如何表达我的内心<span class="github-emoji"><span>😔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f614.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p><h3 id="先抑后扬">先抑后扬</h3><p>从这篇博客开始，我就会进行持续输出，不管是学习相关，还是生活相关，又或者是发牢骚，总之我会坚持输出内容，向世界倾诉。</p><p>你好，世界！<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
